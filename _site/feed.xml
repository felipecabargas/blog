<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Felipe Cabargas's NDD</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="https://blog.nondrivendevelopment.com/feed.xml" />
<link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com" />
<updated>2017-06-09T03:35:09-04:00</updated>
<id>https://blog.nondrivendevelopment.com/</id>
<author>
  <name></name>
  <uri>https://blog.nondrivendevelopment.com/</uri>
  
</author>


<entry>
  <title type="html"><![CDATA[[Daily Tip] How to force existing column to contain data in Rails]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2017/06/tip-of-the-day-not-null-columns-ror" />
  <id>https://blog.nondrivendevelopment.com/2017/06/tip-of-the-day-not-null-columns-ror</id>
  <published>2017-06-08T00:00:00-04:00</published>
  <updated>2017-06-08T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;First, create an empty migration, either by hand or using &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/rails g&lt;/code&gt;. Then use the &lt;code class=&quot;highlighter-rouge&quot;&gt;change_column_null&lt;/code&gt; handle:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FieldNullOnModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;change_column_null&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:column_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Save the changes and migrate (&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/rails db:migrate&lt;/code&gt;). Voila! The target column now requires content. Remember to update existing records to reflect this validation.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2017/06/tip-of-the-day-not-null-columns-ror&quot;&gt;[Daily Tip] How to force existing column to contain data in Rails&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on June 08, 2017.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[Daily Tip] How to add extra fields during user registration with Devise]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2017/06/tip-of-the-day-devise-to-accept-extra-fields" />
  <id>https://blog.nondrivendevelopment.com/2017/06/tip-of-the-day-devise-to-accept-extra-fields</id>
  <published>2017-06-07T00:00:00-04:00</published>
  <updated>2017-06-07T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Let’s use the ‘twitter clone’ example from the rails tutorial. The Twitter registration is different, because it not only requires an &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt; but also a &lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt;. Here is how you can add this extra field to your code:&lt;/p&gt;

&lt;p&gt;First, let’s import the default &lt;code class=&quot;highlighter-rouge&quot;&gt;devise&lt;/code&gt; views into our project:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g devise:views
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will create a folder in &lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/devise/&lt;/code&gt; containing all the views required for (including the ones for &lt;code class=&quot;highlighter-rouge&quot;&gt;registration&lt;/code&gt; that we will modify).&lt;/p&gt;

&lt;p&gt;Create a new file and open it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;touch app/controllers/registrations_controller.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Inside the file, copy the following contents:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RegistrationsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Devise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RegistrationsController&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sign_up_params&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password_confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;account_update_params&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password_confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:current_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, let’s change the &lt;code class=&quot;highlighter-rouge&quot;&gt;config/routes.rb&lt;/code&gt; file to use the new controller:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;devise_for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;controllers: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;registrations: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'registrations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finally, open the ‘New Sign Up’ view (&lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/devise/registrations/new.html.erb&lt;/code&gt;) and add the extra field:&lt;/p&gt;

&lt;div class=&quot;language-erb highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;field&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:username&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_field&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:username&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Done! Restart your server and visit the sign up page (generally &lt;code class=&quot;highlighter-rouge&quot;&gt;/users/sign_up&lt;/code&gt;).&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2017/06/tip-of-the-day-devise-to-accept-extra-fields&quot;&gt;[Daily Tip] How to add extra fields during user registration with Devise&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on June 07, 2017.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Comunidades, una actualización necesaria.]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2016/02/comunidades" />
  <id>https://blog.nondrivendevelopment.com/2016/02/comunidades</id>
  <published>2016-02-22T00:00:00-03:00</published>
  <updated>2016-02-22T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Por Octubre de 2015 escribí “&lt;a href=&quot;http://blog.nondrivendevelopment.com/2015/10/comunidad-sin-lugares-comunes/&quot;&gt;Comunidad sin lugares comunes&lt;/a&gt;” y sigo manteniendo lo ahí dicho. Pero cómo la &lt;em&gt;Parte 2&lt;/em&gt; nunca se publicó, creo que es momento de volver a revisar las posiciones de ese artículo y taclear de paso las opciones que tenemos como comunidad de desarrolladores.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(tldr; al final de la página)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Para hacer esto primero partamos por lo fundamental:&lt;/p&gt;

&lt;h2 id=&quot;problemas-de-las-comunidades-de-desarrolladores-en-chile&quot;&gt;Problemas de las comunidades de desarrolladores en Chile:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Competencia.&lt;/li&gt;
  &lt;li&gt;Intereses Personales.&lt;/li&gt;
  &lt;li&gt;Chaqueteo.&lt;/li&gt;
  &lt;li&gt;Centralismo.&lt;/li&gt;
  &lt;li&gt;(Mala) Educación.&lt;/li&gt;
  &lt;li&gt;Oportunidades.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;competencia&quot;&gt;Competencia&lt;/h4&gt;

&lt;p&gt;Los teóricos más conservadores dirán que siempre la competencia es buena. Aumenta el nivel del progreso y por tanto el bienestar de los individuos. Pero en este caso, en las comunidades, la competencia no hace nada de bien.&lt;/p&gt;

&lt;p&gt;Arrogarse el título de “Comunidad de Desarrolladores de Chile”, no tiene ningún sentido, menos cuando 2 o 3 lo hacen.&lt;/p&gt;

&lt;h4 id=&quot;intereses-personales&quot;&gt;Intereses Personales&lt;/h4&gt;

&lt;p&gt;Esto se refuerza aún más con los caudillajes, estos dueños del foro que moderan, imponen formas y dejan al resto de la comunidad como generadores de contenido para promocionarse como &lt;em&gt;Growth-Hackers&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;No nos hace bien. Y ojo que con esto no estoy desconociendo la necesidad de moderadores y encargados de mantener a la comunidad funcionando, pero es cosa de sentarse 5 minutos a leer nuestras comunidades para notar que distamos mucho de la realidad de las comunidades tanto de proyectos Open Source como las de otras localidades.&lt;/p&gt;

&lt;h4 id=&quot;chaqueteo&quot;&gt;Chaqueteo&lt;/h4&gt;

&lt;p&gt;Esto es lo más doloroso. En las comunidades técnicas todo post de baja dificultad que se postea con orgullo es rápidamente tirado al suelo por los &lt;em&gt;iluminados&lt;/em&gt; que creen que todo el resto son &lt;em&gt;niños rata&lt;/em&gt; y se dedican al destructivismo sistemático en vez de generar conocimiento compartido.&lt;/p&gt;

&lt;h4 id=&quot;centralismo&quot;&gt;Centralismo&lt;/h4&gt;

&lt;p&gt;El otro problema, derivado de la geografía, la educación y el quehacer de la capital chilena, es que Santiago es Chile (o al menos intenta serlo). La comunidad se reduce a una serie de eventos para y por santiaguinos que si bien es algo lógico en primera etapa por una mera cuestión de proporciones, es algo que hoy por hoy, a casi un año de funcionamiento efectivo de las comunidades hay que solucionar: Las regiones existen.&lt;/p&gt;

&lt;h4 id=&quot;mala-educación&quot;&gt;(Mala) Educación&lt;/h4&gt;

&lt;p&gt;El problema educacional es grave, la mayoría (derivado también de problemas sistemáticos más grandes de la idiosincracia chilena) no toma libros, no lee publicaciones y ni siquiera sueña con elaborar una. Nos limitamos a seguir la tendencia extranjera y trabajar en el framework de moda en vez de generar tendencia.&lt;/p&gt;

&lt;h4 id=&quot;oportunidades&quot;&gt;Oportunidades&lt;/h4&gt;

&lt;p&gt;Somos un país aislado, somos un país pequeño, en eterno camino a eso que le dicen “desarrollo”. Probablemente estamos mejor que el resto de la región, pero para nuestra generación es muy difícil penetrar la barrera fronteriza. La mayoría de los desarrolladores no sabe inglés, una cuestión que parece tan pequeña pero que nos impide documentarnos mejor, traer libros de afuera (donde el costo es bastante menor). La desventaja de no saber el idioma en el que trabajas es simplemente la mayor barrera que se me pueda ocurrir. Las comunidades necesitan abrir estas puertas (y algunas lo intentan por suerte).&lt;/p&gt;

&lt;h2 id=&quot;no-todo-son-problemas-ideas-para-solucionar-el-panorama&quot;&gt;No todo son problemas, ideas para solucionar el panorama:&lt;/h2&gt;

&lt;p&gt;Los 6 ejemplos arriba descritos son, en mi opinión, los 6 issues más grandes que enfrentamos hoy por hoy como comunidad (por supuesto hay otros), y debemos superarlos de la manera más dolorosa posible.&lt;/p&gt;

&lt;p&gt;Nuestra carrera, nuestros 2/3 del día se dedican a pensar soluciones. Por eso somos ingenieros, analistas o desarrolladores: Para identificar, encontrar soluciones e implementarlas. Así que por hoy pretendamos que esto es un problema de ingeniería y veamos que hacer. Acá les dejo un par de ideas:&lt;/p&gt;

&lt;h4 id=&quot;competencia-1&quot;&gt;Competencia&lt;/h4&gt;

&lt;p&gt;Las comunidades locales deben intentar trabajar juntas. En ningún caso pretendo superar los problemas personales que pudiesen existir entre individuos, cosa de ellos, pero definitivamente es tiempo de que los &lt;strong&gt;.rb&lt;/strong&gt; y los &lt;strong&gt;.js&lt;/strong&gt; se unan por un bien común. Todas las comunidades ganarían de este proceso, no sólo teórica y tecnológicamente, pero humanamente.&lt;/p&gt;

&lt;h4 id=&quot;intereses-personales-1&quot;&gt;Intereses Personales&lt;/h4&gt;

&lt;p&gt;Las comunidades tienen que empoderarse de sus liderazgos. Los caudillos no tienen cabida en este tipo de comunidad. Es tan simple como ver los canales de IRC de los grandes proyectos OpenSource, donde gente como Aaron Patterson y tú son tan iguales en una discusión como cualquier otro.&lt;/p&gt;

&lt;p&gt;Para esto, deberían crearse los llamados “Code of Conduct” además de tener “Issues Trackers” abiertos a toda la comunidad donde las decisiones administrativas y la planificación del “Roadmap” sean de pleno conocimiento de todos los actores.&lt;/p&gt;

&lt;p&gt;Encima de esto, las comunidades deberían generar documentación sobre los desafíos que dirigir una comunidad conlleva para así ayudar en la formación de otras comunidades.&lt;/p&gt;

&lt;p&gt;Finalmente, los cargos dentro de las comunidades deberían ser revocables por la comunidad. Un mal administrador de un canal de comunicación puede dinamitar el trabajo de decenas de personas en pocas semanas.&lt;/p&gt;

&lt;h4 id=&quot;chaqueteo-1&quot;&gt;Chaqueteo&lt;/h4&gt;

&lt;p&gt;Se deberían instaurar procedimientos de amonestación a los miembros de las comunidades que no sigan el Código de Conducta, ya que no podemos permitirnos perder a gente con ganas de cambiar nuestra realidad. Obviamente estas sanciones deberían ser revisadas y votadas abiertamente por la comunidad.&lt;/p&gt;

&lt;h4 id=&quot;centralismo-1&quot;&gt;Centralismo&lt;/h4&gt;

&lt;p&gt;Las comunidades llamadas “de Chile” deberían hacerse cargo del título auto-impuesto y distribuir la tasa de eventos a lo largo y ancho de nuestro país y empujar la creación de comunidades locales en regiones y provincias, además de la generación de comunidades abiertas a minorías y ayudarlas a conseguir sponsors para hacer de nuestro ambiente uno inclusivo donde todos tienen herramientas.&lt;/p&gt;

&lt;h4 id=&quot;educación&quot;&gt;Educación&lt;/h4&gt;

&lt;p&gt;Generar canales de discusión, limitar el contenido de orígenes dudosos y generar documentación de los eventos realizados y el contenido técnico adquirido por la comunidad de manera de dejar dicho material a disposición de una audiencia mayor.&lt;/p&gt;

&lt;p&gt;Fomentar el uso de herramientas libres, sistemas operativos abiertos y la generación de contenido con licencias Open Source.&lt;/p&gt;

&lt;h4 id=&quot;oportunidades-1&quot;&gt;Oportunidades&lt;/h4&gt;

&lt;p&gt;Dejar lo técnico de lado a veces. Generar reuniones para enseñar idiomas, enseñar como estimar proyectos o tomar requerimientos, generar plataformas de búsqueda de empleo amigables y por sobre todo liberar lo aprendido (Hangout comunitario?) a la comunidad.&lt;/p&gt;

&lt;h2 id=&quot;pensamientos-finales&quot;&gt;Pensamientos Finales:&lt;/h2&gt;

&lt;p&gt;No todo lo que dije es lo mejor, no me creo un iluminado o nada por el estilo. Con este post sólo pretendo poner el tema sobre la mesa y atacar estos problemas que nos conciernen a todos: Hackers, Ingenieros, Desarrolladores, Crackers inclusive.&lt;/p&gt;

&lt;p&gt;Creemos comunidad, encontremos espacios comunes. A mi me gusta el fútbol, a otros escribir historias, a otros ver series. Pero a todos, al menos eso creo, nos gusta el código.&lt;/p&gt;

&lt;h6 id=&quot;tldr&quot;&gt;tldr;&lt;/h6&gt;

&lt;p&gt;La comunidad se divide en vez de unirse. Generemos contenido libre y aprendamos a trabajar todos en pos de nuestro ambiente. Abramos nuestros recursos a regiones y seamos un soporte directo a las minorías que necesitan tener espacios en esta discusión.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2016/02/comunidades&quot;&gt;Comunidades, una actualización necesaria.&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on February 22, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Comunidad sin lugares comunes, Parte 1]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2015/10/comunidad-sin-lugares-comunes" />
  <id>https://blog.nondrivendevelopment.com/2015/10/comunidad-sin-lugares-comunes</id>
  <published>2015-10-05T00:00:00-03:00</published>
  <updated>2015-10-05T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;##Parte 1 - The Chilean Way&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://s3-media4.fl.yelpcdn.com/bphoto/eJItqr-St5zVpmlaA-k1Zw/348s.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como decía ese comercial de TyC: &lt;em&gt;“Es cultural”&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;What’s missing isn’t the ideas… it’s the will to execute them.&lt;/em&gt; ~ Seth Godin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;No hay interés alguno por cambiarlo. Ni en el transporte, ni la educación, ni la salud y menos el software. Es un país a medias.&lt;/p&gt;

&lt;p&gt;###Somos lo que Deportes Player es a Nike, lo que Casa Royal a BestBuy, lo que el maestro chasquilla a Mario y Luigi.&lt;/p&gt;

&lt;p&gt;Y es que en este síndrome de hacer todo a medias los que hacemos software quedamos cortados por la misma tijera que el resto. Cosa de ver las páginas/repositorios personales de algunos colegas para aclarar la cruenta realidad del &lt;em&gt;state-of-the-art&lt;/em&gt; criollo.&lt;/p&gt;

&lt;p&gt;Y aquí entran las “comunidades”, las más-o-menos nombradas comunidades. Ese último intento desesperado del software chileno por forzar lazos de unidad y co-creación altruista y colectiva de conocimiento…&lt;/p&gt;

&lt;p&gt;Lamentablemente, todos esos pseudo-esfuerzos se traducen al final del día en un centro de madres de los 70’s contra el Industrial/Comercial y que poco aporta a una discusión seria en el campo.&lt;/p&gt;

&lt;p&gt;Intereses personales, ignorancia y DEMASIADA gente le hacen mal a la discusión. Cómo sabrán soy partidario de discusiones abiertas e inclusivas, pero nuestro panorama asoma tan fraccionado como las versiones de Android y eso nunca es bueno: &lt;em&gt;Analistas programadores, Licenciados en Ciencias de la Computación, Ingenieros en Computación, Ingenieros en Informática, Ingenieros Civiles en Computación/Informática, Ingenieros Civiles Industriales con mención en algo relacionado, entusiastas, autodidactas y programadores de StackOverflow&lt;/em&gt; nos revolcamos en marañas de información y discusiones en que todos creemos ser mejores que el resto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://imgs.xkcd.com/comics/real_programmers.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;###La educación tanto formal como informal sobre TI (y en especial sobre desarrollo de software) nos ha vuelto tan competitivos como es posible y eso nos impide pensar como grupo.&lt;/p&gt;

&lt;p&gt;No podemos permitirnos ese lujo más, la necesidad de especialistas que &lt;em&gt;realmente sepan&lt;/em&gt; nos hace imperiosa la tarea de dejar individualismos, unir esfuerzos, botar oportunidades de negocio entre colegas y apoyarnos de una vez por todas para sacarnos del fondo de la lista. Porque como empecé diciendo, hacemos todo a medias, incluído el software.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2015/10/comunidad-sin-lugares-comunes&quot;&gt;Comunidad sin lugares comunes, Parte 1&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on October 05, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[A little explanation on Spring]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2014/12/a-little-explanation-on-spring" />
  <id>https://blog.nondrivendevelopment.com/2014/12/a-little-explanation-on-spring</id>
  <published>2014-12-01T00:00:00-03:00</published>
  <updated>2014-12-01T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;#Spring Sucks&lt;/p&gt;

&lt;p&gt;Desde &lt;strong&gt;Rails 4.1&lt;/strong&gt;, el preloader &lt;a href=&quot;https://github.com/rails/spring&quot;&gt;Spring&lt;/a&gt; está incluída por defecto en el framework con el fin de hacer más rápido el desarrollo, ya que mantiene a la aplicación corriendo en background y no se tiene que iniciar con cada ejecución de tests, rake tasks o migraciones.&lt;/p&gt;

&lt;p&gt;Lamentablemente hemos experimentado algunos “problemas” derivados del uso de spring, y acá documentamos algunos de ellos y como “solucionarlos” o “evadirlos”:&lt;/p&gt;

&lt;h2 id=&quot;a-little-explanation&quot;&gt;A little explanation&lt;/h2&gt;

&lt;p&gt;En rails 4.1 los ejecutables de &lt;code class=&quot;highlighter-rouge&quot;&gt;rails&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;bundler&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;rake&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;spring&lt;/code&gt; que se encuentran dentro de la carpeta &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/&lt;/code&gt; de tu proyecto vienen &lt;code class=&quot;highlighter-rouge&quot;&gt;springficados&lt;/code&gt; por defecto, lo que significa que cada vez que ejecutas uno de los comandos de esos ejecutables, la aplicación se pre-carga vía spring.&lt;/p&gt;

&lt;p&gt;##Troubleshoot&lt;/p&gt;

&lt;h2 id=&quot;rake-dbcreate&quot;&gt;&lt;strong&gt;rake db:create&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Como spring hace preload de la aplicación antes de &lt;code class=&quot;highlighter-rouge&quot;&gt;rake&lt;/code&gt;, al correr este comando se produce un error circular &lt;code class=&quot;highlighter-rouge&quot;&gt;database xxxxxxx not found&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para evitarlo tenemos 2 opciones:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/rake db:create
bundle exec rake db:create
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La primera es (&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/ejecutable&lt;/code&gt;), de hecho, la nueva forma de hacerlo según el &lt;em&gt;manual&lt;/em&gt; y es la recomendada a todos los efectos ya que es la única forma de asegurarse que &lt;em&gt;spring&lt;/em&gt; ejecute los comandos en la aplicación que estamos trabajando (&lt;a href=&quot;http://stackoverflow.com/a/23251853/2205353&quot;&gt;Referencia&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;dont-use-spring&quot;&gt;Don’t use Spring:&lt;/h2&gt;

&lt;p&gt;Para decirle a tu ejecutable que no use spring, se le puede pasar &lt;code class=&quot;highlighter-rouge&quot;&gt;DISABLE_SPRING=1&lt;/code&gt;, así:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;rails generators&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  DISABLE_SPRING=1 bin/rails g generator
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;rails server or console&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  DISABLE_SPRING=1 bin/rails s
  DISABLE_SPRING=1 bin/rails c
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;rake&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  DISABLE_SPRING=1 bin/rake task
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;turn-off-spring&quot;&gt;Turn off Spring:&lt;/h2&gt;

&lt;p&gt;Para saber que procesos se están ejecutando:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps aux |grep spring
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;y luego:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kill -9 pid
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;spring-removal-from-existing-project&quot;&gt;Spring Removal from existing project:&lt;/h2&gt;

&lt;p&gt;Si estás igual de cansado que nosotros de spring, puedes hacer &lt;em&gt;unspring&lt;/em&gt; de los ejecutables de tu proyecto corriendo:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/spring binstub --remove --all
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;start-new-projects-without-spring&quot;&gt;Start New Projects without Spring:&lt;/h2&gt;

&lt;p&gt;Ahora bien, si prefieres iniciar tus proyectos sin &lt;code class=&quot;highlighter-rouge&quot;&gt;spring&lt;/code&gt; eso es posible ejecutando:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails new --skip-spring	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2014/12/a-little-explanation-on-spring&quot;&gt;A little explanation on Spring&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on December 01, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Teamocil: speeding up your Tmux workflow ]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2014/09/speed-up-your-workflow-with-teamocil-and-tmux" />
  <id>https://blog.nondrivendevelopment.com/2014/09/speed-up-your-workflow-with-teamocil-and-tmux</id>
  <published>2014-09-16T00:00:00-03:00</published>
  <updated>2014-09-16T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;This week I started using &lt;a href=&quot;http://tmux.sourceforge.net/&quot;&gt;tmux&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://www.vim.org/&quot;&gt;vim&lt;/a&gt; on top of ZSH as my default editor. I was looking for the right time to drop the mouse use, and I fell in love with vim+tmux after seeing a lot of screencasts and speechs about the great power of using a command-line based editor.&lt;/p&gt;

&lt;p&gt;So, when that was installed on my Macbook, I wondered “now what?”… because, for changing &lt;kbd&gt;⌘&lt;/kbd&gt;+&lt;kbd&gt;S&lt;/kbd&gt; for &lt;kbd&gt;ESC&lt;/kbd&gt;+&lt;kbd&gt;:&lt;/kbd&gt;+&lt;kbd&gt;w&lt;/kbd&gt;+&lt;kbd&gt;q&lt;/kbd&gt; is not a good reason.&lt;/p&gt;

&lt;p&gt;So at the moment that I finally discovered the benefits of &lt;strong&gt;vim&lt;/strong&gt; but then I realized that &lt;strong&gt;tmux&lt;/strong&gt; was there only because I readed they were good friends.&lt;/p&gt;

&lt;p&gt;And then, appeared &lt;a href=&quot;https://github.com/remiprev/teamocil&quot;&gt;&lt;strong&gt;teamocil&lt;/strong&gt;&lt;/a&gt;, an awesome RubyGem (take that Python) that creates tmux sessions by only running 1 simple line.&lt;/p&gt;

&lt;p&gt;In order to create a session file (it uses YAML syntax), you have 2 options:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim ~/.teamocil/session-name.yaml
teamocil --edit session-name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then, you can use a layout like the next one inside of that file (see &lt;a href=&quot;http://www.teamocil.com/&quot;&gt;Teamocil Docs&lt;/a&gt; for more info, this is just an example):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name: reciclario
 	windows:
  - name: git
    root: ~/Hacking/Rails/reciclario
    panes:
       - ggpull

  - name: rails server
    root: ~/Hacking/Rails/reciclario
    panes:
       - commands:
            - bundle install
            - rake db:migrate
            - bin/rails server

  - name: rails console
    root: ~/Hacking/Rails/reciclario
    panes:
        - bin/rails console

  - name: vim
    root: ~/Hacking/Rails/reciclario
    focus: true
    panes:
        - vim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When that’s ok, you can run your session with the command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;teamocil session-name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, that creates a new &lt;em&gt;tmux&lt;/em&gt; session with the given name and executes all the stuff defined previously.&lt;/p&gt;

&lt;p&gt;I hope you guys learned something on this little article, and I’m also pleased to tell you that I’m publishing all my dotfiles on GitHub, for you to download. Also, I published my custom terminal themes &amp;amp; color palettes so feel free to use them.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2014/09/speed-up-your-workflow-with-teamocil-and-tmux&quot;&gt;Teamocil: speeding up your Tmux workflow &lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on September 16, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Mac Sketches for everyone (!)]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2014/03/mac-sketches" />
  <id>https://blog.nondrivendevelopment.com/2014/03/mac-sketches</id>
  <published>2014-03-02T00:00:00-03:00</published>
  <updated>2014-03-02T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/MacSketches@2x.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/MacSketches@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;description&quot;&gt;#####DESCRIPTION&lt;/h2&gt;
&lt;p&gt;As a Mac ‘Fanboy’ (I hate that word) I always use Mac images and icons within my projects, but sometimes I want something simple, flat and 0% intrusive in the design.&lt;/p&gt;

&lt;p&gt;So I made this. A simple template in sketch, exportable to AI, SVG and all common formats for the 3 Mac models that you see in the image:&lt;/p&gt;

&lt;p&gt;Now I present &lt;em&gt;Mac Sketches&lt;/em&gt;, featuring:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 versions: Regular, Outline &amp;amp; Bold.&lt;/li&gt;
  &lt;li&gt;All 3 versions contains 3 Mac models (more upcoming): Macbook 13”, Macbook 11” and Mac Mini.&lt;/li&gt;
  &lt;li&gt;Full JPG, PNG &amp;amp; SVG versions.&lt;/li&gt;
  &lt;li&gt;All versions includes a @2x file to use the sketches in Retina Display compatible apps &amp;amp; websites.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.dropbox.com/s/uu0mrkdvgbltud1/MacSketches.zip&quot;&gt;DOWNLOAD NOW&lt;/a&gt;&lt;/strong&gt; (Contains JPG, PNG, SVG &amp;amp; Sketch versions)&lt;/p&gt;

&lt;h2 id=&quot;disclaimer&quot;&gt;#####DISCLAIMER&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;If you want to use it, they are being released under a &lt;a href=&quot;http://creativecommons.org/licenses/by-sa/4.0/&quot;&gt;CC-BY-SA license&lt;/a&gt; so it’s free, even for commercial uses.&lt;/li&gt;
  &lt;li&gt;If you have a requirement, or need the files in any format, please drop me an email to felipe@cabargas.me&lt;/li&gt;
  &lt;li&gt;The Apple logo and Mac brand are registered trademarks of Apple Inc.&lt;/li&gt;
&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2014/03/mac-sketches&quot;&gt;Mac Sketches for everyone (!)&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on March 02, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[My 1st month with TDD or "Why TDD is a pain in the ass but you should learn and use it anyway"]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2014/02/my-frist-month-with-tdd" />
  <id>https://blog.nondrivendevelopment.com/2014/02/my-frist-month-with-tdd</id>
  <published>2014-02-17T00:00:00-03:00</published>
  <updated>2014-02-17T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;This story begins with a developer, 1 month ago who didn’t write a single test in his life (Me). In it’s first day at his &lt;a href=&quot;http://acid.cl&quot;&gt;new work&lt;/a&gt;, his Project Leader gives him a tremendous brief on how use Git and Rspec. The first part of the brief is another history, but the second was just a glance of what all TDD means.&lt;/p&gt;

&lt;p&gt;As you will know, &lt;em&gt;TDD&lt;/em&gt; stands for &lt;strong&gt;Test-Driven Development&lt;/strong&gt; and is a method for writing good, reusable and mainteinable code. Also, if you read the blog often (or just the sidebar) you will know that I work with &lt;strong&gt;Ruby on Rails&lt;/strong&gt;, and in this specific case, we use a Gem, called &lt;strong&gt;RSpec&lt;/strong&gt; instead of the “out-of-the-box” &lt;strong&gt;TestUnit&lt;/strong&gt; that rails brings itself.&lt;/p&gt;

&lt;p&gt;At first, TDD is a pain in the ass, why? Cause TDD most fundamental basis stands in 2 statements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You should write test before coding (or later and then test commenting your code) and see it failing.&lt;/li&gt;
  &lt;li&gt;You should test &lt;em&gt;every single feature&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It sounds pretty bad cause even testing some feature like “The header shows the current user name” should have a test, in that case, it suppose to use also a &lt;em&gt;Factory&lt;/em&gt; (provided via &lt;strong&gt;FactoryGirl&lt;/strong&gt;) and set the current user (i.e. with Devise current_user helper method), and then look for a CSS tag that provides the user name. Sounds tricky for a thing that you should never going to see again and that maybe you done a hundred times before starting this project… But it’s necessary.&lt;/p&gt;

&lt;p&gt;I did not understand this at first place, it was hard for me to put my skills tested by myselft in thing that I consider trivial for an average programmer. But then my PL shows me the meaning of the test… That’s not for me, or maybe it is, but the test needs to be done cause if another programmer or me override the current_user method, or we replace Devise, or the user has no name, the test will fail and we will know where is it, and hopefully, how to fix it quickly.&lt;/p&gt;

&lt;p&gt;So, with that in mind I started to write test for every-single-feature and it gets easy each day. It’s even fun to try write the perfect test without the code in the app and see it passing partially when you write the code. It saves me time when merging also, cause if all test passes in green, then my merge is a piece of cake.&lt;/p&gt;

&lt;p&gt;After this first month from writing my first view test (obviously you can write test for controllers, models, helpers and initializers, and even make the test suite to take screenshots of your partials!) I can’t say anything against TDD, cause it’s awesome, it saves you time, it gives you free time on weekends and definitely makes you more as a developer and less of a simple programmer.&lt;/p&gt;

&lt;p&gt;P.S.: BTW I will write another post with a simple guide to get started with TDD this week, stay tunned and download the Android app, some day I will write Push Notifications on that thing.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2014/02/my-frist-month-with-tdd&quot;&gt;My 1st month with TDD or "Why TDD is a pain in the ass but you should learn and use it anyway"&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on February 17, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[HOW-TO] Añadir y testear rutas en un engine de rails cómo Spree]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2014/01/como-anadir-rutas-a-spree" />
  <id>https://blog.nondrivendevelopment.com/2014/01/como-anadir-rutas-a-spree</id>
  <published>2014-01-29T00:00:00-03:00</published>
  <updated>2014-01-29T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Cómo siempre, para añadir nuevas rutas, se deben añadir con los correspondientes métodos al &lt;code class=&quot;highlighter-rouge&quot;&gt;config/routes.rb&lt;/code&gt;. En el caso de &lt;strong&gt;Spree&lt;/strong&gt; estas rutas no deben dibujarse en &lt;code class=&quot;highlighter-rouge&quot;&gt;Rails.application.routes&lt;/code&gt; si no que en &lt;code class=&quot;highlighter-rouge&quot;&gt;Spree::Core:Engine.routes&lt;/code&gt;; así, para añadir un modelo CRUD al panel de administrador de la plataforma:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Spree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:admin&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:items&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Al añadir rutas, se crearán paths dentro del namespace señalado de esta forma:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spree  / Spree::Core::Engine

Routes &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Spree::Core::Engine:
                                      admin_items GET    /admin/items&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.:format&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                      spree/admin/items#index
                                                  POST   /admin/items&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.:format&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                      spree/admin/items#create
                                   new_admin_item GET    /admin/items/new&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.:format&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                  spree/admin/items#new
                                  edit_admin_item GET    /admin/items/:id/edit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.:format&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                             spree/admin/items#edit
                                       admin_item GET    /admin/items/:id&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.:format&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                  spree/admin/items#show
                                                  PATCH  /admin/items/:id&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.:format&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                  spree/admin/items#update
                                                  PUT    /admin/items/:id&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.:format&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                  spree/admin/items#update
                                                  DELETE /admin/items/:id&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.:format&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                  spree/admin/items#destroy

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;A pesar de esto, al intentar testear cualquier elemento que contenga rutas con RSpec, los test arrojarán &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined method some_new_path&lt;/code&gt; - &lt;a href=&quot;https://gist.github.com/felipecabargas/8676836&quot;&gt;véase ejemplo aquí&lt;/a&gt; -.&lt;/p&gt;

&lt;p&gt;Esto se debe a que estas rutas están &lt;strong&gt;dibujadas&lt;/strong&gt; dentro de &lt;strong&gt;Spree&lt;/strong&gt; y no dentro de Application::Routes por lo cual deben ser llamadas usando el prefijo &lt;strong&gt;spree.&lt;/strong&gt;, por ejemplo en una vista:&lt;/p&gt;

&lt;div class=&quot;language-erb highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Show'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;admin_items_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Back'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;admin_items_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;y en un controlador:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;admin_items_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;notice: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Item was successfully updated.'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;action: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'new'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para los test de routing, también encontramos el mismo problema, que puede ser fácilmente sorteado al añadir esta línea tras el &lt;code class=&quot;highlighter-rouge&quot;&gt;describe &quot;routing&quot; do&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;routes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Spree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2014/01/como-anadir-rutas-a-spree&quot;&gt;[HOW-TO] Añadir y testear rutas en un engine de rails cómo Spree&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on January 29, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[HOW-TO] Install Android KitKat (4.4) on the Moto X (XT1058) with locked bootloader]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/12/how-to-installing-kitkat-44-in-the-moto-x-xt1058-with-locked-bootloader" />
  <id>https://blog.nondrivendevelopment.com/2013/12/how-to-installing-kitkat-44-in-the-moto-x-xt1058-with-locked-bootloader</id>
  <published>2013-12-18T00:00:00-03:00</published>
  <updated>2013-12-18T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/kitkat.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/kitkat.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####DISCLAIMER:&lt;/p&gt;

&lt;p&gt;I used this method with the following hardware and software:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Moto X (XT1058) Movistar.en.CL original with LOCKED bootloader
- MacBook Air with MDM (Motorola Device Manager) installed
- 4.2.2 ROM file: fastboot-ghost_retbr-user-4.2.2-13.9.0Q2.X-116-LCX-35-36-release-keys-cid12-Brasil-BR.tar.gz (EXTRACTED ON DOWNLOADS FOLDER)
- 4.4.0 ROM file: Blur_Version.143.44.8.ghost_row.Brasil.en.BR.zip

THE FILES BELOW WERE UPLOADED BY SOMEONE ELSE.
SO DON'T BLAME ME IF THE LINKS ARE NOT WORKING OR YOU BRICK YOUR PHONE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The process is pretty simple:&lt;/p&gt;

&lt;p&gt;First, you “convert” your Moto X to Brasil Retail version (Flashing the 4.2.2 ROM) and then you upgrade via “sdcard” to 4.4 ROM.&lt;/p&gt;

&lt;p&gt;The whole process takes about 20 minutes and I preserved my info and apps but a wipe is recommended in XDA &amp;amp; MotoXBrasil forums.&lt;/p&gt;

&lt;p&gt;####Downloads:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/file/d/0B3jLajZtiO8kclluMXBscGpzanc/edit&quot;&gt;4.2.2 ROM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/file/d/0By-LEiKdlBMwcXRRY1EtS0F6b2M/edit&quot;&gt;4.4.0 ROM&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;####Goint to Retail Steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Put your &lt;strong&gt;Moto X&lt;/strong&gt; in “fastboot” mode (With the phone OFF, press and hold the Volume Down &amp;amp; Power Button and then release de Power Button).&lt;/li&gt;
  &lt;li&gt;Connect your Moto X to your PC vía USB.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In Linux &amp;amp; OS X go to Terminal and enter the following commands:&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Downloads/fastboot-ghost_retbr-user-4.2.2-13.9.0Q2.X-116-LCX-35-36-release-keys-cid12-Brasil-BR/
bash flashall.sh
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;(In Windows open the Files Explorer go to the extracted folder and execute flashall.bat)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Wait until it finish.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;####Updating to KitKat Steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Connect your Moto X to the computer as a media device.&lt;/li&gt;
  &lt;li&gt;Put the Blur_Version.143.44.8.ghost_row.Brasil.en.BR.zip file under the root folder of your phone&lt;/li&gt;
  &lt;li&gt;Go to Settings-&amp;gt;About-&amp;gt;Available Updates&lt;/li&gt;
  &lt;li&gt;Accept all and wait&lt;/li&gt;
  &lt;li&gt;You’re now using KitKat without losing your Warranty.&lt;/li&gt;
&lt;/ol&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/12/how-to-installing-kitkat-44-in-the-moto-x-xt1058-with-locked-bootloader&quot;&gt;[HOW-TO] Install Android KitKat (4.4) on the Moto X (XT1058) with locked bootloader&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on December 18, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[RUBY] Creating a Gem from scratch - Day 1]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/08/rails-creating-a-gem-from-scratch-day-1" />
  <id>https://blog.nondrivendevelopment.com/2013/08/rails-creating-a-gem-from-scratch-day-1</id>
  <published>2013-08-03T00:00:00-04:00</published>
  <updated>2013-08-03T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;em&gt;Aquí se relata cómo crear una gema desde 0, y no pretende ser una guía sino más bien una bitácora que ayude a sortear errores típicos de este proceso. Para usar Jeweler u “scaffolds” de generación siéntase libre de Googlear (!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ruby on Rails es grandioso, pero no tenemos idea de como muchas cosas funcionan y es tiempo de asumirlo. Quizá de este “hermoso y desconocido” mundo lo más interesante sea el sistema de gemas (gems) y en particular el ‘repo’ &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En fin, siempre quize hacer una gema yo mismo y en particular tras mi último proyecto, una forma de simplificar a los desarrolladores la inclusión de sistemas de rating en sus sitios.&lt;/p&gt;

&lt;p&gt;Para empezar obviamente y como todo en informática, hay que partir por leer. Yo empecé por las &lt;a href=&quot;http://guides.rubygems.org/&quot;&gt;guías de RubyGems&lt;/a&gt; y en específico creo que es importante partir por las recomendaciones de &lt;a href=&quot;http://guides.rubygems.org/name-your-gem/&quot;&gt;como nombrar una gema&lt;/a&gt; (es más, creo que tendré que cambiarle el nombre a la mía) ya que el uso de “-“ o “_” es más que algo de azar e influye en el comportamiento de la gema, la llamada y la denominación de las clases, etc.&lt;/p&gt;

&lt;p&gt;Luego se debe ir a la referencia básica y el “Hello World” de la creación de gemas (&lt;a href=&quot;http://guides.rubygems.org/make-your-own-gem/&quot;&gt;Make Your Own Gem&lt;/a&gt;). Básicamente ahí se entiende la estructura básica de un Gem folder, la forma correcta de escribir el archivo gemspec y otros aspectos esenciales.&lt;/p&gt;

&lt;p&gt;De ahí ya podemos saltar a la terminal y el editor de texto (en mi caso la gema es rate-it así que pondré los comandos que yo usé):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir rate-it &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mkdir rate-it/lib &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rate-it &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch rate-it.gemspec
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;lib &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch rate-it.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Estas sencillas líneas generarán el siguiente directorio:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tree
   ├── rate-it.gemspec
   └── lib
         └── rate-it.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El archivo &lt;strong&gt;rate-it.gemspec&lt;/strong&gt; corresponde a las variables de configuración de la gema y contiene el nombre, versión, autor, licencia, dependencias y ramas de archivos que deben considerarse. En tanto el archivo &lt;strong&gt;lib/rate-it.rb&lt;/strong&gt; corresponde al archivo que contiene las funciones de la gema.&lt;/p&gt;

&lt;p&gt;Pero eso no sirve de mucho, mi idea es una gema que funcione de la siguiente manera:&lt;/p&gt;

&lt;p&gt;#####Gemfile&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rate-it'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1.0'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Guardamos e instalamos la gema (si lo hacen se instalará, ya está disponible arriba aunque no contiene código dicha versión)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rails g rate-it:install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;y que eso generase todas las migraciones, vistas, assets, controladores y el modelo de los ratings.&lt;/p&gt;

&lt;p&gt;Así que me puse a investigar junto con mirar el código de ‘devise’ y me entretuve un buen rato en el mundo de los &lt;a href=&quot;http://guides.rubyonrails.org/generators.html&quot;&gt;Generadores de Rails&lt;/a&gt; y así a los namespaces en los mismos, etc.&lt;/p&gt;

&lt;p&gt;En otro minuto explicaré en detalle como construir un generator.&lt;/p&gt;

&lt;p&gt;Así que nuevamente a agregar archivos (no explicaré esto en detalle pero les dejaré el tree para que sepan más o menos como va cada cosa)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tree
  ├── rate-it.gemspec
  └── lib
       ├── generators
       │     ├── rate-it
       │     │    └── install_generator.rb #also create routes
       │     └── templates
       │          ├── views #views for rates
       │          │    ├── new.html.erb
       │          │    ├── edit.html.erb
       │          │    └── show.html.erb
       │          ├── AddTableRates.rb #this is a migration
       │          ├── average_rate.rb #injects a method to helpers
       │          └── rating.css.scss #stylesheet
       └── rate-it.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Así y tras mucho rato de investigación y lectura, tenemos una gema básica con importaciones básicas, y ahora ya puedo preocuparme de incluir funcionalidad.&lt;/p&gt;

&lt;p&gt;Definitivamente no es mi proyecto prioritario por ahora, pero no lo dejaré de lado y los mantendré al tanto.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/08/rails-creating-a-gem-from-scratch-day-1&quot;&gt;[RUBY] Creating a Gem from scratch - Day 1&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on August 03, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[RAILS] Rename paths & routes in a resource]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/07/rails-rename-paths-and-routes-instead-of-renaming-model" />
  <id>https://blog.nondrivendevelopment.com/2013/07/rails-rename-paths-and-routes-instead-of-renaming-model</id>
  <published>2013-07-16T00:00:00-04:00</published>
  <updated>2013-07-16T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Como parte de mi nuevo trabajo en FOSUBO - ganador del AngelHack Spring 2013 SCL - me ha tocado hacer varios cambios en el modelo de datos, y uno de esos implicaba pasar de Members a POSs en las rutas (por temas de consistencia).&lt;/p&gt;

&lt;p&gt;La primera opcion era renombrar el modelo y así resources lo haría por mi pero ya se esta usando el producto y no quiero traspasar tanta información a mano. Así que lo hice en las rutas, eliminé la parte del modelo y los campos de la base de datos que no me servían y dispuse manos a la obra.&lt;/p&gt;

&lt;p&gt;Rake me arrojaba paths de esta forma ( &lt;em&gt;rake routes&lt;/em&gt; ):&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;location_members&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/location/&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;y yo las quería así:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;location_point_of_sales&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/location/&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para lograrlo abrimos &lt;em&gt;routes.rb&lt;/em&gt; encontramos el resource del modelo en cuestión y lo cambiamos desde:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:locations&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;a:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:locations&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:members&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;point_of_sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pos&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Con esta sencilla línea de código nos ahorramos muchísimo tiempo de renaming y evitamos inconsistencias entre archivos. Espero que les sirva&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/07/rails-rename-paths-and-routes-instead-of-renaming-model&quot;&gt;[RAILS] Rename paths & routes in a resource&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on July 16, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[LIFE] Pensamientos tras otro AngelHack SCL]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/06/pensamientos-tras-otro-angelhack" />
  <id>https://blog.nondrivendevelopment.com/2013/06/pensamientos-tras-otro-angelhack</id>
  <published>2013-06-05T00:00:00-04:00</published>
  <updated>2013-06-05T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/angelhack.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/angelhack.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tras un fin de semana de locos y un proyecto hermoso puedo decir: MISIÓN CUMPLIDA. No ganamos, pero sacamos adelante una plataforma hermosa visualmente y complejísima a nivel de backend.&lt;/p&gt;

&lt;p&gt;Pero volvamos al título de este post: AngelHack…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;CRITICAS Y NO TAN CRÍTICAS&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;La charla de Microsoft en el workshop para hackers fue una burla. No necesito decir más.&lt;/p&gt;

&lt;p&gt;Las primeras horas super complicadas para la organización, un asco la UDD en cuanto a soporte técnico durante el sábado (se arregló despues)… Lo que sí destaco de todo el embrollo y el mal rato que tuvimos que pasar es a los “Nixter boys” que hicieron lo que podían para subir los ánimos de la gente y de los gringos que puteaban como si la falta de internet fuera el fin del mundo (existe el tethering muchachos), me saco el sombrero por los hermanos Yarad y Sáez.&lt;/p&gt;

&lt;p&gt;La noche del segundo día /* entiéndase desde las 00 horas del domingo en adelante, cuando ya tenía ethernet */ se hizo ETERNA…Y si agregamos lo mal educados que fueron casi TODOS los asistentes a AHSCL respecto a las pizzas y las RedBull, de verdad dejó mucho que desear. Para la próxima ojalá hayan más actividades pasado las 2 am, por último helicópteros como en 2012.&lt;/p&gt;

&lt;p&gt;Luego el famoso incidente del chico con ataque de epilepsia (or whatever it was), bien lo preocupados que estuvieron TODO el equipo (los de polerón rojo - regalen uno ! -), además me sirvió pa echarme un rato en uno de los puff de Google que habían en el segundo piso.&lt;/p&gt;

&lt;p&gt;En resumen, hubo varios detalles pero fue culpa de todos si algo salió mal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;ASPECTOS DESTACABLES, BUENOS Y GENIALES&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gran jurado, de verdad… Lo que extrañé en noviembre se cumplió con creces este año. Los pitch no se convirtieron en una chacra de proyectos a medio hacer mezclados con un jurado incompetente para una fiesta de hackers tan grande como lo es AngelHack; NO, este año había un jurado internacional, gente de Google Ventures, de TechCrunch, de AngelList… Bien por ese lado.&lt;/p&gt;

&lt;p&gt;Además, subió MUCHÍSIMO el nivel respecto de otras hackathon… se notó, gente conocida en Chile participó y todos con ideas que en su mercado proponían algo nuevo. Tuvimos a los mejores exponentes de la esfera emprendedora chilena.&lt;/p&gt;

&lt;p&gt;Las instalaciones, los almuerzos y la acreditación… todos de lujo (nótese que dije almuerzos específicamente).&lt;/p&gt;

&lt;p&gt;La cagó la música, filo si la criticaron, me mantuvo despierto que es su función y definitivamente escuchar algunos temas de la red social motiva cuando eres hacker. Haters gonna hate (f*cking hustlers).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;RESUMEN GENERAL&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gran hackathon, muchas cosas por revisar antes de la próxima edición pero no porque el nivel actual sea malo, sino porque estamos cerca de tener una producción de clase mundial, porque hay que poner a este país en el mapa de una vez.&lt;/p&gt;

&lt;p&gt;Igualmente eso sí, extraño una hackathon donde el HACK sea el importante, porque hasta hoy podría llamarse AngelHustling y calzaría perfecto. Nos falta eso.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/06/pensamientos-tras-otro-angelhack&quot;&gt;[LIFE] Pensamientos tras otro AngelHack SCL&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on June 05, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[DESIGN] Flat UI y el futuro del diseño digital]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/06/flat-ui-y-el-futuro-del-diseno" />
  <id>https://blog.nondrivendevelopment.com/2013/06/flat-ui-y-el-futuro-del-diseno</id>
  <published>2013-06-05T00:00:00-04:00</published>
  <updated>2013-06-05T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/raffl.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/raffl.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Todos vamos para allá. La industria se ve arrastrada por una moda que a mi personalmente me encanta: la Flat UI.&lt;/p&gt;

&lt;p&gt;Esta moda de la sencillez, de la vuelta a los colores “pasteles” y los turquesa/esmeralda pronto estará en todas partes, dehecho todos los rumores indican que el gran aporte de Johnny Ive en el equipo de UI/UX de iOS ha sido ese, la introducción de elementos flat como los que vemos en Windows Phone 7/8 o algunos de los aportes de Matias Duarte en Android 4.&lt;/p&gt;

&lt;p&gt;Lo interesante de que el diseño se estabilice en la zona más baja de la curva de complejidad es interesante más allá de la visión de la UI (interfaz de usuario). Por qué? Porque esto implica que la UX (experiencia de usuario) es el tópico al que ponerle interés. Cuando una de las dos partes de una fórmula no varía, la única diferencia entre el éxito y el fracaso de la fórmula es la otra parte, en este caso, la experiencia.&lt;/p&gt;

&lt;p&gt;Y en esta moda, la experiencia de usuario debe ser consecuente con el diseño, las curvas de aprendizaje deben ser mínimas y sitios como Vine.co lo han demostrado. Es por esto que como FrontEnd Developer les aconsejo a todos quienes entran o están en el mundo del diseño que sigan estas vanguardias de cerca, porque dentro de dos semanas es la WWDC (iOS 7 se debería lanzar ahí) y de eso en más deberíamos vernos rodeados de Flat.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/flatui.jpg&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/flatui.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Atenti!&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/06/flat-ui-y-el-futuro-del-diseno&quot;&gt;[DESIGN] Flat UI y el futuro del diseño digital&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on June 05, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[OS X] Verify Local Data on Transmission for Mac]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/05/verifying-local-data-on-transmission" />
  <id>https://blog.nondrivendevelopment.com/2013/05/verifying-local-data-on-transmission</id>
  <published>2013-05-18T00:00:00-04:00</published>
  <updated>2013-05-18T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/transmission.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/transmission.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Transmission es quizá el mejor cliente de torrents para Mac y Linux.&lt;/p&gt;

&lt;p&gt;A veces mientras descargamos “legalmente” contenido desde la web vía torrent algunos datos están corruptos y por lo tanto las descargas se pausan.&lt;/p&gt;

&lt;p&gt;El mensaje de error por defecto de Transmission es ‘Verify local data’… hasta ahí todo bien, dehecho en linux basta con hacer clic derecho en el torrent y luego en ‘Verify local data’. Pero en OS X no.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/tra1.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/tra1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para sortear este problema vamos a las Preferencias de Transmission (⌘,) ubicadas en el menú superior (clic sobre “Transmission”):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/pref1.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/pref1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Una vez ahí, vamos a la pestaña “Remoto” y seleccionamos la opción “Activar acceso remoto”:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/tra2.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/tra2.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego hacemos clic en “Ejecutar interfaz web” o abrimos http://localhost:9091/transmission/web/ en el navegador y ya sólo bastará con hacer clic derecho sobre el torrent en cuestión y presionar “Verify Local Data”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/tra3.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/tra3.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Espero que este tip les haya sido tan útil como a mi. Un saludo a todos.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/05/verifying-local-data-on-transmission&quot;&gt;[OS X] Verify Local Data on Transmission for Mac&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on May 18, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[OS X] Install Python 2.7.4 & PyGame in Mountain Lion without Homebrew]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/05/install-python-274-and-pygame-without-homebrew" />
  <id>https://blog.nondrivendevelopment.com/2013/05/install-python-274-and-pygame-without-homebrew</id>
  <published>2013-05-15T00:00:00-04:00</published>
  <updated>2013-05-15T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/pygame.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/pygame.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ayer dabamos la solución para instalar PyGame 1.9.1 en Mountain Lion mediante Homebrew, hoy les traigo la alternativa más conservadora.&lt;/p&gt;

&lt;p&gt;He preparado este tutorial y un archivo .dmg que hace las veces de contenedor de todos los paquetes que se deben descargar (al final de este post adjunto una lista con los instaladores incluidos y su función).&lt;/p&gt;

&lt;p&gt;Durante el proceso sin embargo es necesario repetir algunos procesos de los que veíamos ayer… Lo bueno es que TODOS SE EJECUTAN TRAS LOS INSTALADORES:&lt;/p&gt;

&lt;p&gt;Tras instalar todo ejecuten los siguientes comandos:&lt;/p&gt;

&lt;p&gt;cd /Library/Frameworks/SDL.framework/Headers
  ln -s SDL ./
  export CC=’/usr/bin/gcc’
  export CFLAGS=’-isysroot  /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk   -I/opt/X11/include -arch i386’
  export LDFLAGS=’-arch i386’
  export ARCHFLAGS=’-arch i386’&lt;/p&gt;

&lt;p&gt;Ahora para instalar PyGame (requerido):&lt;/p&gt;

&lt;p&gt;curl -O http://www.pygame.org/ftp/pygame-1.9.1release.tar.gz
  tar -xzf pygame-1.9.1release.tar.gz
  cd pygame-1.9.1release/
  python config.py
  python setup.py build
  python setup.py install&lt;/p&gt;

&lt;p&gt;Para instalar PyObjC (requerido):&lt;/p&gt;

&lt;p&gt;env CC=clang easy_install -U pyobjc-core
  env CC=clang easy_install -U pyobjc&lt;/p&gt;

&lt;p&gt;Tras todo esto ya deberían poder hacer import del módulo ‘pygame’ normalmente. Pueden remover el directorio pygame-1.9.1release.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/05/install-python-274-and-pygame-without-homebrew&quot;&gt;[OS X] Install Python 2.7.4 & PyGame in Mountain Lion without Homebrew&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on May 15, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[OS X] Install pygame on OS X with a Homebrew Python 2.7 install]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/05/install-pygame-mac-with-homebrew-python" />
  <id>https://blog.nondrivendevelopment.com/2013/05/install-pygame-mac-with-homebrew-python</id>
  <published>2013-05-14T00:00:00-04:00</published>
  <updated>2013-05-14T00:00:00-04:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/pygame.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/pygame.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si eres uno de los tantos usuarios del gran proyecto HomeBrew quizá te has visto en el dilema de instalar el módulo ‘pygame’ en OS X (mi Mac Mini tiene 10.8.3 así que sé que este tuto funciona en Mountain Lion).&lt;/p&gt;

&lt;p&gt;Para mi segunda tarea del curso de Programación de Computadores de la UTFSM tenemos que usar el módulo (que convenientemente conozco debido al curso de Inteligencia Artificial de Berkeley que tomé hace un semestre en edX) y necesitaba instalarlo, es aquí donde surge el problema:&lt;/p&gt;

&lt;p&gt;Existen 10 o más instaladores, más de 10 taps y sin duda más de una respuesta en StackOverflow al respecto así que te dejo los comandos que a mi me funcionaron y que no deberían fallar.&lt;/p&gt;

&lt;p&gt;Manos a la obra. Abran un terminal e ingresen los siguientes comandos:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -O http://www.pygame.org/ftp/pygame-1.9.1release.tar.gz
tar -xzf pygame-1.9.1release.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;pygame-1.9.1release/
python config.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;En el archivo ‘Setup’ buscamos las entradas con SDL, FONT, IMAGE y MIXER y las reemplazamos por las siguientes (estan juntas):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SDL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SDL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lSDL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FONT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lSDL_ttf&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;IMAGE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lSDL_image&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MIXER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lSDL_mixer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Pueden también descomentar funciones extra que quieren que se compilen quitando los # de las líneas correspondientes&lt;/p&gt;

&lt;p&gt;Ahora de vuelta en la terminal reemplazaremos un archivo con este otro (cambian dos ocurrencias pero les ahorro el trabajo):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/
sudo curl -O http://www.cabargas.me/files/scale_mmx64.c
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
sudo python setup.py install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Tras todo esto ya deberían poder hacer import del módulo ‘pygame’ normalmente. Pueden remover el directorio pygame-1.9.1release.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/05/install-pygame-mac-with-homebrew-python&quot;&gt;[OS X] Install pygame on OS X with a Homebrew Python 2.7 install&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on May 14, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[[PYTHON] Check existence of an element inside a list]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/04/search-for-element-not-in-a-list" />
  <id>https://blog.nondrivendevelopment.com/2013/04/search-for-element-not-in-a-list</id>
  <published>2013-04-16T00:00:00-03:00</published>
  <updated>2013-04-16T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/tortuga.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/tortuga.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para la &lt;a href=&quot;http://progra.usm.cl/apunte/tareas/2013-1/tarea-1.html&quot;&gt;tarea de la Tortuga&lt;/a&gt; de mi curso de &lt;a href=&quot;http://progra.usm.cl/&quot;&gt;Programación de Computadores de la UTFSM&lt;/a&gt;, con los Sres. &lt;a href=&quot;http://github.com/nanorambuena&quot;&gt;Nano Norambuena&lt;/a&gt; y &lt;a href=&quot;http://github.com/franciscomadariaga&quot;&gt;Pancho Madariaga&lt;/a&gt; tuvimos que hacer muchísimas restricciones a la entrada del usuario, y la más compleja quizá fue lidiar con que no se ingresaran caracteres en minúsculas o distintos de los C, T y V que se podían ingresar.&lt;/p&gt;

&lt;p&gt;Al final resulta que necesitabamos saber si un caracter del string era o no “C” o “V” y por lo tanto revisabamos el string desde el índice 1 hasta el -2 (o el len()-1 de la cadena), aquí pongo el código simplificado como ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;torre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ingrese una torre:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bloques&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;techo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;intbloq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'V'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indice&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bloques&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bloques&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;construccion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intbloq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;techo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;techo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Torre mal ingresada&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Como verán lo que básicamente utilizamos fue ver si el caracter está en una lista de python, lo que es en el fondo el objetivo de este post, así que si quieren chequear la existencia de un elemento dentro de una lista se usa:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ingreso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Ingrese una letra de la A a la C:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lista&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ingreso&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lista&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'La letra ingresada no es válida'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ingreso&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/04/search-for-element-not-in-a-list&quot;&gt;[PYTHON] Check existence of an element inside a list&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on April 16, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Presenting LABS]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/03/presenting-labs" />
  <id>https://blog.nondrivendevelopment.com/2013/03/presenting-labs</id>
  <published>2013-03-30T00:00:00-03:00</published>
  <updated>2013-03-30T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/labs.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/labs.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Desde hoy está disponible &lt;a href=&quot;http://labs.cabargas.me&quot;&gt;labs.cabargas.me&lt;/a&gt; mi nueva plataforma para compartir ideas de diseño de interfaces, etc. Será algo así como un portafolio digital para mantener el blog como debe ser… Enseñando código y dando tips, y no mezclarlo con las pegas realizadas.&lt;/p&gt;

&lt;p&gt;Así que aparte de ser un link más que adjuntar a mi &lt;a href=&quot;http://cl.linkedin.com/in/cabargas&quot;&gt;LinkedIn&lt;/a&gt; espero se convierta en un lugar del cual sacar ideas para UI/UX de los que pierden su tiempo en este blog.&lt;/p&gt;

&lt;p&gt;Junto a eso no monetizaré dicho lugar y lo trataré de mantener todo lo simple que se pueda, con pocas fotos de cada proyecto, con tags organizados y de cuando en cuando observaciones de una que otra condición especial de un proyecto, pero sin perder el rumbo jamás de ser un lugar poco ‘técnico’ y más bien visual que catedrático.&lt;/p&gt;

&lt;p&gt;Un abrazo y (si tiene tiempo) péguese una vuelta por allá. Queda cordialmente invitado.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/03/presenting-labs&quot;&gt;Presenting LABS&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on March 30, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Introducing ASEO]]></title>
  <link rel="alternate" type="text/html" href="https://blog.nondrivendevelopment.com/2013/03/introducing-aseo" />
  <id>https://blog.nondrivendevelopment.com/2013/03/introducing-aseo</id>
  <published>2013-03-22T00:00:00-03:00</published>
  <updated>2013-03-22T00:00:00-03:00</updated>
  <author>
    <name>Felipe Cabargas</name>
    <uri>https://blog.nondrivendevelopment.com</uri>
    <email>felipe.cabargas@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://cabargas.com/images/aseo1.png&quot;&gt;&lt;img src=&quot;http://cabargas.com/images/aseo1.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Les pasó que a veces descargas muchas cosas y se van acumulando? A final del mes la carpeta de Descargas se hace un lío de PDF’s de la U, imágenes de Tumblr y uno que otro archivo medio raro que llegó via Torrent.&lt;/p&gt;

&lt;p&gt;Siempre pensé que sería “bacán” tener un programa que los reordenara por mí pero sin UI, sin preguntarme tanta cosa y sin lios para descargarlo.&lt;/p&gt;

&lt;p&gt;Es así que nace &lt;strong&gt;ASEO&lt;/strong&gt; (descargable gratis en &lt;a href=&quot;https://github.com/felipecabargas/aseo&quot;&gt;GitHub&lt;/a&gt; ).&lt;/p&gt;

&lt;p&gt;Con ASEO se simplifica todo: solamente necesitas abrir la terminal o hacerle doble clic para que el programa (escrito en Python) te pida una ruta a limpiar.&lt;/p&gt;

&lt;p&gt;Actualmente funciona solamente en sistemas UNIX (A.K.A. Linux y Mac) y funciona con muchísimas de las extensiones más utilizadas por un usuario promedio (se irán añadiendo más poco a poco).&lt;/p&gt;

&lt;p&gt;Respecto al soporte y como lo dice en el link de más arriba, ASEO estará disponible para Windows lo antes posible y ya me he puesto a trabajar en eso.&lt;/p&gt;

&lt;p&gt;Espero les sirva. Siéntanse libres de modificarlo (porfavor con forks para hacer pull request de nuevas funciones o mejoras). Un abrazo!&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;https://blog.nondrivendevelopment.com/2013/03/introducing-aseo&quot;&gt;Introducing ASEO&lt;/a&gt; was originally published by Felipe Cabargas at &lt;a href=&quot;https://blog.nondrivendevelopment.com&quot;&gt;Felipe Cabargas's NDD&lt;/a&gt; on March 22, 2013.&lt;/p&gt;</content>
</entry>

</feed>